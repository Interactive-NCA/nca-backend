# dungeon: 3, null model, 1e-6, 1 scan, 0 aux
# holey: 2, SeqNCA3D, 3-scans, 1e-6, 0 aux

exp_id: [
    # testStaticBuilds,
    # testing_0,
    0,
    1,
    2,
    # 3,
    # 10,
    # 11,
    # 12,
]

problem: [
    # "minecraft_3D_maze",
    # "minecraft_3D_rain",
    # "minecraft_3D_holey_maze",
    # "minecraft_3D_dungeon_holey",

#   "minecraft_3D_zelda,
    "binary",
    # "binary_holey",
#   "zelda",
#   "sokoban",
#   'simcity',
#   'smb',
  # "minecraft_3D_dungeon",  # nope
  ]

  # Pairs of [representation, model] hyperparameters. If model is None, then revert to a default model class.

# lol this is dumb
representation_model: [
      # ["narrow", SeqNCA],
      # ["narrow", SeqNCA3D],
      # ["narrow", null],

      # ['turtle', SeqNCA],
      ['turtle', null],
      # ["wide", null],
        # ["wide", NCA],
    #   ["wideholey", null],
      # ["narrow", null],
    #   ["wide", null],
        # ["wide", NCA],
      # ["cellular", null],
        # ["cellular", NCA],
        # [cellular, DenseNCA],
        # [cellular, Decoder],
]

model_cfg: [
    null,
    # {'conv_filters': 64, 'fc_size': 64},
    # {'conv_filters': 128, 'fc_size': 128,},
    # {'conv_filters': 256, 'fc_size': 256,},
    # {'conv_filters': 512, 'fc_size': 512,},
]

# TODO: incorporate formal (rather than only functional) metrics as controls
global_controls: [
  null,
]

local_controls: {
      "minecraft_3D_maze": [
        # [n_jump],
        # [path-length],
        # [n_jump, path-length],
      ],
      "minecraft_3D_rain": [
      ],
      "minecraft_3D_holey_maze": [
        # [n_jump],
        # [connected-path-length],
        # [n_jump, connected-path-length],
      ],
      "minecraft_3D_dungeon_holey": [
  #       ["emptiness", "path-length"],
        # [n_jump],
        # [path-length],
        # [n_jump, path-length],       
      ],
      "binary": [
        # ["regions"],
        # ["path-length"],
        # ["regions", "path-length"],
          # ['emptiness', 'path-length'],
          # ["symmetry", "path-length"]
      ],
      "binary_holey": [
            # ["regions"],
            # ["path-length"],
            # ["regions", "path-length"],
            # ['emptiness', 'path-length'],
            # ["symmetry", "path-length"]
      ],
      "zelda": [
          # ["nearest-enemy"],
          # ["path-length"],
          # ["nearest-enemy", "path-length"],
          # ["emptiness", "path-length"],
          # ["symmetry", "path-length"],
      ],
      "sokoban": [
          # ["crate"],
          # ["sol-length"],
          # ["crate", "sol-length"],
          # ["emptiness", "sol-length"],
          # ["symmetry", "sol-length"],
      ],
      "smb": [
          # ['enemies', 'jumps'],
          # ["emptiness", "jumps"],
          # ["symmetry", "jumps"],
      ],
      "RCT": [
          # ['income'],
      ],
      "minecraft_3D_dungeon": [
  #       ["emptiness", "path-length"],
      ],
  }

# Whether to use a funky curriculum (Absolute Learning Progress w/ Gaussian Mixture Models: 
# https://arxiv.org/abs/1910.07224) for sampling controllable metric targets. (i.e., sample lower path-length targets 
# at first, then higher ones as agent becomes more skilled.)
alp_gmm: [
    False,
#   True,
]

# How much of the original level the generator-agent is allowed to change before episode termination.
change_percentage: [
  # 0.2,
  # 0.6,
  # 0.8,
  # 1.0,
  null,
]

# The probability that a given tile in the random initial state is "static", i.e. cannot be modified by the agent.
static_prob: [
  null,
  # 0.1,
  # 0.2,
  # 0.5,
]

# The size of the action 
"action_size": [
  null,
  # [3, 3],
  # [3, 3, 3],
]

"learning_rate": [
  # 1,
  # 0.5,
  # 0.01,
  # 0.001,
  # 0.0001,
  0.00005,
  0.00001,
  # 0.000005,
  0.000001,
  # 1e-7,
]

"max_board_scans": [
# 1,
# 2,
3,
]

"n_aux_tiles": [
  0,
  # 4,
  # 8,
]

# The size of the observation space: null means full observation space.
# For egocentric representation, this is the size of the observation space 
# after the agent is translated to the center of the board. For example 3 means 3*3 around the agent for 2D case.
# For non-egocentric representation, the observation space is the size of the board no matter what number is given.
"observation_size": [
# 3,
null,
]


# The number of frames of the training process to run. null means the default value. (1e10 for now.)
"n_frame": [
null,
]

# Either single agent (None) or we specify a dict of multi-agent specific settings. (Can put these in separate yaml's 
# later.)
multiagent: [
  # null,
  {
    n_agents: 2,
  },
  # {
  #   n_agents: 3,
  # },
]
